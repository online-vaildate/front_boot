image: registry.saas.hand-china.com/openshift/origin-cli:v1.5.0

stages:
  - build
  - docker
  - staging
  - production-package
  - production-build
  - production-deploy

variables:
  CI_PROJECT_NAME: hapcloudfront
  GIT_SUBMODULE_STRATEGY: recursive

.node-build-template: &node-build-template
  image: registry.saas.hand-china.com/tools/node:7.10.0
  stage: build
  before_script:
    - "chmod 777 ./boot/structure/npm.sh"
    - "./boot/structure/npm.sh boot iam"
  script:
    - "cd boot"
    - "./node_modules/.bin/gulp start"
    - "CONSOLE_HOST=http://$APP_HOST API_HOST=$API_HOST npm run build"
    - "mkdir /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/"
    - "cp -r dist /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/dist"

node-build-staging:
  <<: *node-build-template
  variables:
    APP_HOST: $CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
    API_HOST: $API_HOST_STAGING
  only:
    - master
    - /^v.*$/

.docker-build-template: &docker-build-template
  image: registry.saas.hand-china.com/tools/docker:latest
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.cloud.saas.hand-china.com
  script:
    - "cp -r /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/dist dist"
    - "docker build -t registry.cloud.saas.hand-china.com/hapcloud/hapcloudfront:$CI_COMMIT_REF_NAME ."
    - "docker push registry.cloud.saas.hand-china.com/hapcloud/hapcloudfront:$CI_COMMIT_REF_NAME"
  after_script:
    - "rm -rf /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA"


docker-build:
  <<: *docker-build-template
  stage: docker
  only:
    - master
    - /^v.*$/

.deploy: &deploy
  before_script:
    - oc login $OPENSHIFT_SERVER -u $OPENSHIFT_USER -p $OPENSHIFT_PASS --insecure-skip-tls-verify
    - oc project "$CI_PROJECT_NAME" 2> /dev/null || oc new-project "$CI_PROJECT_NAME"
  script:
    - "envsubst < deployment.template.yml > deployment.yml"
    - "oc apply -f deployment.yml -n $CI_PROJECT_NAME"

staging:
  <<: *deploy
  stage: staging
  variables:
    APP: hapcloudfront
    APP_HOST: $CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
    CI_ENVIRONMENT_URL: http://$CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
    IMAGES_TAG: "$CI_COMMIT_REF_NAME"
  environment:
    name: staging
    url: http://$CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
  only:
    - master
    - /^v.*$/


docker-build-production:
  <<: *docker-build-template
  stage: production-build
  script:
    - "cp -r /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/dist dist"
    - "docker build -t registry.cloud.saas.hand-china.com/hapcloud/hapcloudfront:prod ."
    - "docker push registry.cloud.saas.hand-china.com/hapcloud/hapcloudfront:prod"
  only:
    - master
    - /^v.*$/

production:
  <<: *deploy
  stage: production-deploy
  variables:
    APP: production
    APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
    CI_ENVIRONMENT_URL: http://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
    IMAGES_TAG: "prod"
  environment:
    name: production
    url: http://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  only:
    - master
    - /^v.*$/

node-build-production:
  <<: *node-build-template
  stage: production-package
  variables:
    APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
    API_HOST: $API_HOST_PROD
  when: manual
  allow_failure: false
  only:
    - master
    - /^v.*$/

#review:
#  <<: *deploy
#  stage: review
#  variables:
#    APP: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
#    APP_HOST: $CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
#    CI_ENVIRONMENT_URL: http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
#    IMAGES_TAG: "$CI_COMMIT_REF_NAME"
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
#    on_stop: stop_review
#  only:
#    - branches
#  except:
#    - master

#stop_review:
#  <<: *deploy
#  stage: cleanup
#  variables:
#    APP: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
#    GIT_STRATEGY: none
#  script:
#    - oc delete dc $APP -n $CI_PROJECT_NAME-$CI_PROJECT_ID
#    - oc delete svc $APP -n $CI_PROJECT_NAME-$CI_PROJECT_ID
#    - oc delete routes $APP -n $CI_PROJECT_NAME-$CI_PROJECT_ID
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    action: stop
#  when: manual
#  only:
#    - branches
#  except:
#    - master

# test:
#   <<: *node-build-template
#   script:
#     - "ln -s /cache/front_iam/node_modules node_modules"
#     - "npm install"
#     - "./node_modules/.bin/gulp start"
#     - "CONSOLE_HOST=http://$APP_HOST API_HOST=$API_HOST npm run build"
#     - "cd .."
#   variables:
#     APP_HOST: $CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
#     API_HOST: $API_HOST_STAGING
#   only:
#     - branches
#   except:
#     - master
